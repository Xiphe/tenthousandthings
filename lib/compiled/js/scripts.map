{"version":3,"file":"scripts.js","sources":["../../src/js/init.js","../../src/js/directive.list.js","../../src/js/directive.thing.js","../../src/js/service.color.js","../../../.tmp/ngtemplates.js"],"names":["angular","module","PAGE_URL","directive","$http","$q","colorService","restrict","replace","templateUrl","controller","$scope","hasPages","pages","page","loadPage","i","d","defer","pageUrl","get","then","result","resolve","data","reject","promise","applyPageContents","contents","things","forEach","thing","loaded","isUndefined","path","content","ttt","window","setSalt","colorSalt","colorSalt2","initial","scroll","when","scope","$sce","background","stringToColor","categories","border","color","getContrastColor","style","background-color","border-color","getContent","trustAsHtml","factory","hashCode","str","hash","length","charCodeAt","intToRGB","shift","hex","toString","k","key","salts","colors","dark","light","r","parseInt","substring","g","b","o","Math","round","salt","default","run","$templateCache","put"],"mappings":"CACA,WACE,YAEAA,SAAQC,OAAO,qBAAsB,uBCHvC,WACE,YAGA,IAAIC,GAAW,yBAEfF,SAAQC,OAAO,qBAAqBE,UAAU,WAC5C,QAAS,KAAM,WACf,SAASC,EAAOC,EAAIC,GAClB,OACEC,SAAU,IACVC,SAAS,EACTC,YAAa,YACbC,YACE,SACA,SAASC,GASP,QAASC,KACP,MAAOC,GAAQC,EAGjB,QAASC,GAASC,GAChB,GAAIC,GAAIZ,EAAGa,QACPC,EAAUjB,EAASM,QAAQ,QAASQ,EAKxC,OAJAZ,GAAMgB,IAAID,GAASE,KAAK,SAASC,GAC/BL,EAAEM,QAAQD,EAAOE,OAChBP,EAAEQ,QAEER,EAAES,QAGX,QAASC,GAAkBC,GACzBjB,EAAOkB,OAAOC,QAAQ,SAASC,GACzBA,EAAMC,QACLhC,QAAQiC,YAAYL,EAASG,EAAMG,SACtCH,EAAMI,QAAUP,EAASG,EAAMG,MAC/BH,EAAMC,QAAS,KA3BrB,GAAII,GAAMC,OAAOD,IACbtB,EAAOsB,EAAItB,MAAQ,EACnBD,EAAQuB,EAAIvB,OAAS,QAClBwB,QAAOD,IAEd9B,EAAagC,QAAQF,EAAIG,WACzBjC,EAAagC,QAAQF,EAAII,WAAY,KA0BrC7B,EAAOkB,OAASO,EAAIK,YACpB9B,EAAOC,SAAWA,IAElBD,EAAO+B,OAAS,WACV/B,EAAOC,WACTD,EAAOC,UAAW,EAClBP,EAAGsC,KAAK5B,EAASD,EAAO,IACrBO,KAAKM,GACLN,KAAK,WACJP,GAAQ,EACRH,EAAOC,SAAWA,iBC1DtC,WACE,YAEAZ,SAAQC,OAAO,qBAAqBE,UAAU,YAC5C,WACA,SAASG,GACP,OACEC,SAAU,IACVC,SAAS,EACToC,OACEb,MAAO,KAETtB,YAAa,aACbC,YACE,OAAQ,SACR,SAASmC,EAAMlC,GAEb,GAAImC,GAAaxC,EAAayC,cAAcpC,EAAOoB,MAAMiB,WAAW,IAChEC,EAAS3C,EAAayC,cAAcpC,EAAOoB,MAAMiB,WAAW,GAAI,KAChEE,EAAQ5C,EAAa6C,iBAAiBL,EAAY,SAAU,SAEhEnC,GAAOyC,OACLC,mBAAoB,IAAMP,EAC1BQ,eAAgB,IAAML,EACtBC,MAAO,IAAMA,GAGfvC,EAAO4C,WAAa,WAClB,MAAI5C,GAAOoB,MAAMC,OACRa,EAAKW,YAAY7C,EAAOoB,MAAMI,SADvC,iBC3Bd,WACE,YAEAnC,SAAQC,OAAO,qBAAqBwD,QAAQ,YAC1C,WAOE,QAASC,GAASC,GAEhB,IAAK,GADDC,GAAO,EACF5C,EAAI,EAAGA,EAAI2C,EAAIE,OAAQ7C,IAC9B4C,EAAOD,EAAIG,WAAW9C,KAAO4C,GAAQ,GAAKA,GAC1CA,GAAQ,CAGV,OAAOA,GAGT,QAASG,GAAS/C,GAChB,GAAIkC,GAAQ,EASZ,QARC,EAAG,EAAG,IAAIpB,QAAQ,SAASkC,GAC1B,GAAIC,IAAQjD,GAAKgD,EAAS,KAAME,SAAS,GACtB,KAAfD,EAAIJ,SACNI,EAAM,EAAIA,GAEZf,GAASe,IAGJf,EAGT,QAASH,GAAcY,EAAKQ,GAC1B,GAAIC,GAAM,SAWV,OAVID,KACFC,EAAM,IAAMD,GAGdR,GAAOU,EAAMD,GAERE,EAAOX,KACVW,EAAOX,GAAOI,EAASL,EAASC,KAG3BW,EAAOX,GAIhB,QAASR,GAAiBD,EAAOqB,EAAMC,GACrC,GAAIC,GAAIC,SAASxB,EAAMyB,UAAU,EAAG,GAAI,IACpCC,EAAIF,SAASxB,EAAMyB,UAAU,EAAG,GAAI,IACpCE,EAAIH,SAASxB,EAAMyB,UAAU,EAAG,GAAI,IACpCG,EAAIC,KAAKC,OAAY,IAAJP,EAAgB,IAAJG,EAAgB,IAAJC,GAAY,IAEzD,OAAIC,GAAI,IACCP,GAAQ,SAERC,GAAS,SAIpB,QAASlC,GAAQ2C,EAAMd,GACrB,GAAIC,GAAM,SACND,KACFC,EAAM,IAAMD,GAEdE,EAAMD,GAAO,GAAKa,EA/DpB,GAAIX,MACAD,GACFa,UAAW,GAgEb,QACEnC,cAAeA,EACfI,iBAAkBA,EAClBb,QAASA,SC5EjBtC,QAAQC,OAAO,qBAAqBkF,KAAK,iBAAkB,SAASC,GAClE,YAEAA,GAAeC,IAAI,YACjB,sNAUFD,EAAeC,IAAI,aACjB","sourcesContent":["/* global angular */\n(function() {\n  'use strict';\n\n  angular.module('tenthousandthings', ['infinite-scroll']);\n})();\n","/* global angular */\n(function() {\n  'use strict';\n\n  /** @const */\n  var PAGE_URL = '/_things/page:page.json';\n\n  angular.module('tenthousandthings').directive('tttList', [\n    '$http', '$q', 'tttColor',\n    function($http, $q, colorService) {\n      return {\n        restrict: 'E',\n        replace: true,\n        templateUrl: 'list.html',\n        controller: [\n          '$scope',\n          function($scope) {\n            var ttt = window.ttt;\n            var page = ttt.page || 1;\n            var pages = ttt.pages || 1;\n            delete window.ttt;\n\n            colorService.setSalt(ttt.colorSalt);\n            colorService.setSalt(ttt.colorSalt2, '2');\n\n            function hasPages() {\n              return pages > page;\n            }\n\n            function loadPage(i) {\n              var d = $q.defer();\n              var pageUrl = PAGE_URL.replace(':page', i);\n              $http.get(pageUrl).then(function(result) {\n                d.resolve(result.data);\n              }, d.reject);\n\n              return d.promise;\n            }\n\n            function applyPageContents(contents) {\n              $scope.things.forEach(function(thing) {\n                if (thing.loaded) { return; }\n                if (!angular.isUndefined(contents[thing.path])) {\n                  thing.content = contents[thing.path];\n                  thing.loaded = true;\n                }\n              });\n            }\n\n            $scope.things = ttt.initial || [];\n            $scope.hasPages = hasPages();\n\n            $scope.scroll = function() {\n              if ($scope.hasPages) {\n                $scope.hasPages = false;\n                $q.when(loadPage(page + 1))\n                  .then(applyPageContents)\n                  .then(function() {\n                    page += 1;\n                    $scope.hasPages = hasPages();\n                  });\n              }\n            };\n          }\n        ]\n      };\n    }\n  ]);\n})();\n","/* global angular */\n(function() {\n  'use strict';\n\n  angular.module('tenthousandthings').directive('tttThing', [\n    'tttColor',\n    function(colorService) {\n      return {\n        restrict: 'E',\n        replace: true,\n        scope: {\n          thing: '='\n        },\n        templateUrl: 'thing.html',\n        controller: [\n          '$sce', '$scope',\n          function($sce, $scope) {\n\n            var background = colorService.stringToColor($scope.thing.categories[0]);\n            var border = colorService.stringToColor($scope.thing.categories[0], '2');\n            var color = colorService.getContrastColor(background, '111111', 'eeeeee');\n\n            $scope.style = {\n              'background-color': '#' + background,\n              'border-color': '#' + border,\n              color: '#' + color\n            };\n\n            $scope.getContent = function() {\n              if ($scope.thing.loaded) {\n                return $sce.trustAsHtml($scope.thing.content);\n              }\n            };\n          }\n        ]\n      };\n    }\n  ]);\n})();\n","/* global angular */\n/* jshint bitwise: false */\n(function() {\n  'use strict';\n\n  angular.module('tenthousandthings').factory('tttColor', [\n    function() {\n      var colors = {};\n      var salts = {\n        'default': ''\n      };\n\n      /* http://stackoverflow.com/questions/3426404/create-a-hexadecimal-colour-based-on-a-string-with-javascript */\n      function hashCode(str) { // java String#hashCode\n        var hash = 0;\n        for (var i = 0; i < str.length; i++) {\n          hash = str.charCodeAt(i) + ((hash << 5) - hash);\n          hash |= 1;\n        }\n\n        return hash;\n      }\n\n      function intToRGB(i) {\n        var color = '';\n        [0, 8, 16].forEach(function(shift) {\n          var hex = ((i >> shift) & 0xFF).toString(16);\n          if (hex.length === 1) {\n            hex = 0 + hex;\n          }\n          color += hex;\n        });\n\n        return color;\n      }\n\n      function stringToColor(str, k) {\n        var key = 'default';\n        if (k) {\n          key = '_' + k;\n        }\n\n        str += salts[key];\n\n        if (!colors[str]) {\n          colors[str] = intToRGB(hashCode(str));\n        }\n\n        return colors[str];\n      }\n\n      /* http://stackoverflow.com/questions/11867545/change-text-color-based-on-brightness-of-the-covered-background-area */\n      function getContrastColor(color, dark, light) {\n        var r = parseInt(color.substring(0, 2), 16);\n        var g = parseInt(color.substring(2, 4), 16);\n        var b = parseInt(color.substring(4, 6), 16);\n        var o = Math.round(((r * 299) + (g * 587) + (b * 114)) / 1000);\n\n        if (o > 125) {\n          return dark || '000000';\n        } else {\n          return light || 'ffffff';\n        }\n      }\n\n      function setSalt(salt, k) {\n        var key = 'default';\n        if (k) {\n          key = '_' + k;\n        }\n        salts[key] = '' + salt;\n      }\n\n      return {\n        stringToColor: stringToColor,\n        getContrastColor: getContrastColor,\n        setSalt: setSalt\n      };\n    }\n  ]);\n})();\n","angular.module('tenthousandthings').run(['$templateCache', function($templateCache) {\n  'use strict';\n\n  $templateCache.put('list.html',\n    \"<div class=\\\"ttt-list\\\"\\n\" +\n    \"\\tinfinite-scroll=\\\"scroll()\\\"\\n\" +\n    \"\\tinfinite-scroll-disabled=\\\"!hasPages\\\"\\n\" +\n    \"\\tinfinite-scroll-immediate-check=\\\"false\\\"\\n\" +\n    \">\\n\" +\n    \"\\t<ttt-thing ng-repeat=\\\"thing in things\\\" thing=\\\"thing\\\"></ttt-thing>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('thing.html',\n    \"<article ng-if=\\\"thing.loaded\\\" class=\\\"ttt-thing\\\" ng-style=\\\"style\\\">\\n\" +\n    \"\\t<h3>{{thing.title}}</h3>\\n\" +\n    \"\\t<div ng-bind-html=\\\"getContent()\\\"></div>\\n\" +\n    \"</article>\"\n  );\n\n}]);\n"]}